<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	https://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context 
	https://www.springframework.org/schema/context/spring-context.xsd 
	http://mybatis.org/schema/mybatis-spring 
	http://mybatis.org/schema/mybatis-spring-1.2.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!--  Service, DAO, DB관련등 (모든곳에서 참조해야되는 설정들) 여기에  -->
	
	<!-- DB 관련 세팅 -->
	<!-- 커넥션 관련 설정 정보 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" /> 
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@javaking.iptime.org:1521:ORCL" />
		<property name="username" value="team04" />
		<property name="password" value="team04" />
	</bean>  
	<!-- 커넥션 맺어줄때 사용하는 클래스 등록 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>  
	<!-- 커넥션 풀 역할  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="/WEB-INF/spring/mybatis-config.xml" />
	</bean>
	
	<!-- 민아님 카카오api관련 -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate"  />
	
	<!-- 민아님 quartz-->
    <bean id="SaleJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
       <!-- 서비스 구현 객체의 빈 이름을 인자로 줍니다. -->
       <property name="targetObject" ref="SchedulerService" />
       <!-- 서비스 객체에서 주기적으로 실행될 메소드들 지정합니다. -->
       <property name="targetMethod" value="SetSale" />
       <!-- 동시 실행을 방지합니다. -->
       <property name="concurrent" value="false" />
   </bean>
   <bean id="SubJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
       <property name="targetObject" ref="SchedulerService" />
       <property name="targetMethod" value="DoSubPay" />
       <property name="concurrent" value="false" />
   </bean>
   
   <bean id="JobTrigger1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
   <!--CronTriggerFactoryBean">-->
       <property name="jobDetail" ref="SaleJob" />
       <!-- 실제로는 매일 새벽 12시에 하도록-->
       <!-- <property name="cronExpression" value="0 0 0 * * ?" />-->
       <!-- 시작하고 1분후에 실행한다. (milisecond) -->
        <property name="startDelay" value="60000" /> 
       <!-- 매 2분마다 실행한다. 5 * 60 * 1000(300000) 86400000 (milisecond) --> 
         <property name="cronExpression" value="0 0/2 * * * ?" />
   </bean>
      
   <bean id="JobTrigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
       <property name="jobDetail" ref="SubJob" />
       <property name="cronExpression" value="0 0/2 * * * ?" />
   </bean>
   
   <!-- 테스트용 스케줄러 -->

   <bean id="testJobScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
       <property name="triggers">
           <!-- 앞에서 설정한 트리거를 등록합니다. 필요하면 여러개 만들어서 등록하면 됩니다. -->
          <list>
              <ref bean="JobTrigger1" />
                <ref bean="JobTrigger2" />
          </list>
       </property>
   </bean>
	
	
	
	<!-- mybatis로 mapper 패키지 스캔 추가 -->
	<mybatis-spring:scan base-package="com.member.mapper"/> 
	<mybatis-spring:scan base-package="com.board.mapper"/> 
	<mybatis-spring:scan base-package="com.admin.mapper"/>
	<mybatis-spring:scan base-package="com.shop.mapper"/>  
	
	<!-- 지은님 -->
	<mybatis-spring:scan base-package="com.project.mapper"/>
	<mybatis-spring:scan base-package="com.qna.mapper"/>
	
	
	
	<!-- spring아 service 패키지 스캔해 -->
	<context:component-scan base-package="com.member.service" /> 
	<context:component-scan base-package="com.board.service" /> 
    <context:component-scan base-package="com.admin.service" />
    <context:component-scan base-package="com.shop.service" />
    <context:component-scan base-package="com.project.service" />
    <context:component-scan base-package="com.qna.service" />
    
    
	
	
		
</beans>
